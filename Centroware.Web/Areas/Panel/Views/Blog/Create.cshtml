@model Centroware.Model.DTOs.Blogs.BlogCreateDto
@{
}
<style>
    .tags-container tags {
        min-height: 35px;
    }

    .tagify {
        padding-bottom: 3px;
    }
</style>
<!-- include summernote css/js -->
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
<div class="card card-custom">
    <div class="card-header">
        <h3 class="card-title">Create Post</h3>
    </div>
    <!--begin::Form-->
    <div class="card-body">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label asp-for="Title"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="BlogCategoryId"></label>
                        <select asp-for="BlogCategoryId" id="BlogCategorySelect" class="form-control"></select>
                        <span asp-validation-for="BlogCategoryId" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ImageFile"></label>
                        <div class="custom-file">
                            <input asp-for="ImageFile" type="file" class="custom-file-input" id="StaticImageFile">
                            <label class="custom-file-label" for="StaticImageFile">Choose file</label>
                        </div>
                        <span asp-validation-for="ImageFile" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-9 col-sm-12">
                    <label asp-for="stringTags"></label>
                    <div style="min-height:2rem" class="form-group tags-container">
                        <input id="kt_tagify_1" class="tagify" asp-for="stringTags" name="tags" placeholder="type..." />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div style="min-height:2rem" class="form-group tags-container">
                        <div id="summernote">Hello Summernote</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary font-weight-bold mr-2">Submit</button>
                <button type="button" data-dismiss="modal" class="btn btn-light-primary font-weight-bold">Cancel</button>
            </div>
        </form>
    </div>
    <!--end::Form-->
</div>

@section Scripts{
    <script>
        PageLoadActions();
    </script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
    <script>
        // Class definition
        var KTTinymce = function () {
            // Private functions
            var demos = function () {
                tinymce.init({
                    selector: '#kt-tinymce-1',
                    toolbar: false,
                    statusbar: false
                });
            }

            return {
                // public functions
                init: function () {
                    demos();
                }
            };
        }();

        // Initialization
        jQuery(document).ready(function () {
            KTTinymce.init();
        });</script>
    <script>
        $(document).ready(function () {
            $('#summernote').summernote({
                placeholder: 'Write Description',
                tabsize: 2,
                height: 100
            });
        });
        var inputElm = document.querySelector('input[name=tags]');

        // initialize Tagify on the above input node reference
        var tagify = new Tagify(inputElm);

        // Chainable event listeners
        tagify.on('add', onAddTag)
            .on('remove', onRemoveTag)
            .on('input', onInput)
            .on('edit', onTagEdit)
            .on('invalid', onInvalidTag)
            .on('click', onTagClick)
            .on('focus', onTagifyFocusBlur)
            .on('blur', onTagifyFocusBlur)

        var mockAjax = (function mockAjax() {
            var timeout;
            return function (duration) {
                clearTimeout(timeout); // abort last request
                return new Promise(function (resolve, reject) {
                    timeout = setTimeout(resolve, duration || 700, whitelist)
                })
            }
        })()

        // tag added callback
        function onAddTag(e) {
            console.log("onAddTag: ", e.detail);
            console.log("original input value: ", inputElm.value)
            tagify.off('add', onAddTag) // exmaple of removing a custom Tagify event
        }

        // tag remvoed callback
        function onRemoveTag(e) {
            console.log("onRemoveTag:", e.detail, "tagify instance value:", tagify.value)
        }

        function onTagEdit(e) {
            console.log("onTagEdit: ", e.detail);
        }

        // invalid tag added callback
        function onInvalidTag(e) {
            console.log("onInvalidTag: ", e.detail);
        }

        // invalid tag added callback
        function onTagClick(e) {
            console.log(e.detail);
            console.log("onTagClick: ", e.detail);
        }

        function onTagifyFocusBlur(e) {
            console.log(e.type, "event fired")
        }
    </script>
}
